{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addContacts","className","classes","tilie","contactFormConteiner","action","contactForm","onSubmit","this","lableName","htmlFor","type","placeholder","onChange","Component","Filter","filter","filterRender","title","ContactList","array","deleteItem","contactList","map","item","onClick","id","uuidv4","App","contacts","el","find","alert","prevState","handleFilter","contactItem","toLowerCase","includes","handleDelete","obj","index","indexOf","slice","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContact","conteiner","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,qBAAuB,0CAA0C,UAAY,iC,yBCAjLD,EAAOC,QAAU,CAAC,MAAQ,wB,gBCA1BD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,UAAY,yB,yKCExBC,EAAgB,CAAEC,KAAM,GAAIC,OAAQ,IAwD3BC,E,4MArDbC,M,eACKJ,G,EAELK,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBN,EADU,EACVA,KAAMO,EADI,EACJA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAE1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,YAAX,eAA4B,EAAKT,QACjC,EAAKK,SAAS,CAAER,KAAM,GAAIC,OAAQ,M,uDAKlC,OACE,qCACE,oBAAIY,UAAWC,IAAQC,MAAvB,uBACA,qBAAKF,UAAWC,IAAQE,qBAAxB,SACE,uBACEC,OAAO,SACPJ,UAAWC,IAAQI,YACnBC,SAAUC,KAAKX,aAHjB,UAKE,sBAAKI,UAAWC,IAAQO,UAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLvB,KAAK,OACLwB,YAAY,aACZjB,MAAOa,KAAKjB,MAAMH,KAClByB,SAAUL,KAAKhB,kBAInB,sBAAKS,UAAWC,IAAQO,UAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBACEC,KAAK,OACLvB,KAAK,SACLwB,YAAY,eACZjB,MAAOa,KAAKjB,MAAMF,OAClBwB,SAAUL,KAAKhB,kBAGnB,wBAAQmB,KAAK,SAAb,sC,GA9CcG,a,iBCDX,SAASC,EAAT,GAA2C,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aACvC,OACE,kCACE,oBAAIhB,UAAWC,IAAQgB,MAAvB,oBACA,uBACEP,KAAK,OACLvB,KAAK,SACLwB,YAAY,SACZjB,MAAOqB,EACPH,SAAU,SAAApB,GAAC,OAAIwB,EAAaxB,EAAEC,OAAOC,a,6BCM9BwB,EAdK,YAAkC,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACrC,OACE,oBAAIpB,UAAWC,IAAQoB,YAAvB,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,+BACGA,EAAKpC,KADR,KACgBoC,EAAKnC,OACnB,wBAAQsB,KAAK,SAASc,QAAS,kBAAMJ,EAAWG,EAAKE,KAArD,sBAFOC,qB,iBCsEFC,G,kNAtEbrC,MAAQ,CACNsC,SAAU,CACR,CAAEH,GAAI,OAAQtC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEqC,GAAI,OAAQtC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEqC,GAAI,OAAQtC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEqC,GAAI,OAAQtC,KAAM,iBAAkBC,OAAQ,cAEhD2B,OAAQ,I,EAaVhB,YAAc,SAAA8B,GACR,EAAKvC,MAAMsC,SAASE,MAAK,SAAAP,GAAI,OAAIA,EAAKpC,OAAS0C,EAAG1C,QACpD4C,MAAM,GAAD,OAAIF,EAAG1C,KAAP,6BAEL,EAAKQ,UAAS,SAAAqC,GAEZ,MAAO,CAAEJ,SADQ,sBAAOI,EAAUJ,UAAjB,CAA2BC,S,EAMlDI,aAAe,WAAO,IAAD,EACU,EAAK3C,MAA1BsC,EADW,EACXA,SAAUb,EADC,EACDA,OAClB,OAAOa,EAASb,QAAO,SAAAmB,GAAW,OAChCA,EAAY/C,KAAKgD,cAAcC,SAASrB,EAAOoB,mB,EAInDE,aAAe,SAAAZ,GAAO,IACZG,EAAa,EAAKtC,MAAlBsC,SACFU,EAAMV,EAASE,MAAK,SAAAD,GAAE,OAAIA,EAAGJ,KAAOA,KACpCc,EAAQX,EAASY,QAAQF,GAC/B,EAAK3C,UAAS,SAAAqC,GAAS,MAAK,CAC1BJ,SAAS,GAAD,mBACHI,EAAUJ,SAASa,MAAM,EAAGF,IADzB,YAEHP,EAAUJ,SAASa,MAAMF,EAAQ,SAGxC,EAAK5C,SAAS,CAAEoB,OAAQ,M,EAG1BC,aAAe,SAAAD,GACb,EAAKpB,SAAS,CAAEoB,Y,kEA1CZ2B,aAAaC,QAAQ,aACvBpC,KAAKZ,SAAS,CAAEiC,SAAUgB,KAAKC,MAAMH,aAAaC,QAAQ,iB,yCAG3CG,EAAWd,GACxBA,EAAUJ,WAAarB,KAAKjB,MAAMsC,UACpCc,aAAaK,QAAQ,WAAYH,KAAKI,UAAUzC,KAAKjB,MAAMsC,a,+BAsCrD,IAAD,EACsBrB,KAAKjB,MAA1ByB,EADD,EACCA,OAAQa,EADT,EACSA,SACVqB,EAAiB1C,KAAK0B,eAC5B,OACE,mCACE,sBAAKjC,UAAWC,IAAQiD,UAAxB,UACE,cAAC,EAAD,CAAanD,YAAaQ,KAAKR,cAC9B6B,EAASuB,OAAS,GACjB,cAACrC,EAAD,CAAQC,OAAQA,EAAQC,aAAcT,KAAKS,eAE7C,cAAC,EAAD,CAAaG,MAAO8B,EAAgB7B,WAAYb,KAAK8B,wB,GAjE7CxB,cCHlBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b187dc10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__29elz\",\"tilie\":\"ContactForm_tilie__2xiD6\",\"contactFormConteiner\":\"ContactForm_contactFormConteiner__1ZQN4\",\"lableName\":\"ContactForm_lableName__28vtc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__kcUYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2wDnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"App_conteiner__IXLOO\"};","import React, { Component } from 'react';\r\nimport classes from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = { name: '', number: '' };\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addContacts({ ...this.state });\r\n    this.setState({ name: '', number: '' }); //1 варіант очищаю input після submit(відправки)\r\n    // this.setState(INITIAL_STATE);  //2 варіант очищаю input після submit(відправки)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2 className={classes.tilie}>Phonebook</h2>\r\n        <div className={classes.contactFormConteiner}>\r\n          <form\r\n            action=\"submit\"\r\n            className={classes.contactForm}\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <div className={classes.lableName}>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"enter name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.lableName}>\r\n              <label htmlFor=\"number\">Number</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"number\"\r\n                placeholder=\"enter number\"\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Add contacts</button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Filter.module.css';\r\n\r\nexport default function Filter({ filter, filterRender }) {\r\n  return (\r\n    <label>\r\n      <h2 className={classes.title}>Filter</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"Finder\"\r\n        value={filter}\r\n        onChange={e => filterRender(e.target.value)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  filterRender: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport classes from './ContactList.module.css';\r\n\r\nconst ContactList = function ({ array, deleteItem }) {\r\n  return (\r\n    <ul className={classes.contactList}>\r\n      {array.map(item => (\r\n        <li key={uuidv4()}>\r\n          {item.name}: {item.number}\r\n          <button type=\"button\" onClick={() => deleteItem(item.id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  array: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  deleteItem: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm.js';\nimport Filter from './components/Filter/Filter.js';\nimport ContactList from './components/ContactList/ContactList.js';\nimport classes from './App.module.css';\nimport './bases.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    if (localStorage.getItem('contacts')) {\n      this.setState({ contacts: JSON.parse(localStorage.getItem('contacts')) });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContacts = el => {\n    if (this.state.contacts.find(item => item.name === el.name)) {\n      alert(`${el.name} is already in contacts.`);\n    } else {\n      this.setState(prevState => {\n        const updateState = [...prevState.contacts, el];\n        return { contacts: updateState };\n      });\n    }\n  };\n\n  handleFilter = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contactItem =>\n      contactItem.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  handleDelete = id => {\n    const { contacts } = this.state;\n    const obj = contacts.find(el => el.id === id);\n    const index = contacts.indexOf(obj);\n    this.setState(prevState => ({\n      contacts: [\n        ...prevState.contacts.slice(0, index),\n        ...prevState.contacts.slice(index + 1),\n      ],\n    }));\n    this.setState({ filter: '' }); // очистили інпут після нажаття на кнопку delete\n  };\n\n  filterRender = filter => {\n    this.setState({ filter }); // відповідає запису this.setState({ filter: filter })\n  };\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContact = this.handleFilter();\n    return (\n      <>\n        <div className={classes.conteiner}>\n          <ContactForm addContacts={this.addContacts} />\n          {contacts.length > 1 && (\n            <Filter filter={filter} filterRender={this.filterRender} />\n          )}\n          <ContactList array={visibleContact} deleteItem={this.handleDelete} />\n        </div>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}